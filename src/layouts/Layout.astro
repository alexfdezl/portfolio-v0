---
interface Props {
	title: string;
	description: string;
}

const { title, description } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<script>
			if (
				localStorage.theme === "dark" ||
				(!("theme" in localStorage) &&
					window.matchMedia("(prefers-color-scheme: dark)").matches)
			) {
				document.documentElement.classList.add("dark");
			} else {
				document.documentElement.classList.remove("dark");
			}
		</script>

		<meta charset="UTF-8" />
		<meta name="description" content={description} />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body class="bg-slate-300 dark:bg-gray-800 pb-0 sm:pb-6 bg-opacity-25">
		<slot />
	</body>
</html>
<style is:global>
	/* html {
		font-family:
			Menlo,
			Monaco,
			Lucida Console,
			"Courier New",
			Courier,
			monospace;
	} */
</style>

<!-- <script>
    function initializeTheme() {
    if (localStorage.theme === 'dark' || (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
        document.documentElement.classList.add('dark');
    } else {
        document.documentElement.classList.remove('dark');
    }
}

    document.addEventListener('DOMContentLoaded', (event) => {
        initializeTheme();
    });
</script> -->
